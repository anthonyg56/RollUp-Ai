/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicPublicImport } from './routes/_public/_public'
import { Route as ProtectedProtectedImport } from './routes/_protected/_protected'
import { Route as AuthAuthImport } from './routes/_auth/_auth'
import { Route as PublicPublicIndexImport } from './routes/_public/_public.index'
import { Route as PublicPublicTermsImport } from './routes/_public/_public.terms'
import { Route as PublicPublicPrivacyImport } from './routes/_public/_public.privacy'
import { Route as PublicPublicPricingImport } from './routes/_public/_public.pricing'
import { Route as ProtectedProtectedVideosImport } from './routes/_protected/_protected.videos'
import { Route as AuthAuthVerifyImport } from './routes/_auth/_auth.verify'
import { Route as AuthAuthSurveyImport } from './routes/_auth/_auth.survey'
import { Route as AuthAuthResetImport } from './routes/_auth/_auth.reset'
import { Route as AuthAuthRegisterImport } from './routes/_auth/_auth.register'
import { Route as AuthAuthLoginImport } from './routes/_auth/_auth.login'
import { Route as AuthAuthForgotImport } from './routes/_auth/_auth.forgot'
import { Route as ProtectedProtectedVideosIndexImport } from './routes/_protected/_protected.videos.index'
import { Route as ProtectedProtectedVideosIdImport } from './routes/_protected/_protected.videos.$id'
import { Route as ProtectedProtectedVideosIdProcessImport } from './routes/_protected/_protected.videos.$id.process'
import { Route as ProtectedProtectedVideosIdEditImport } from './routes/_protected/_protected.videos.$id.edit'

// Create/Update Routes

const PublicPublicRoute = PublicPublicImport.update({
  id: '/_public/_public',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedProtectedRoute = ProtectedProtectedImport.update({
  id: '/_protected/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PublicPublicIndexRoute = PublicPublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicPublicRoute,
} as any)

const PublicPublicTermsRoute = PublicPublicTermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => PublicPublicRoute,
} as any)

const PublicPublicPrivacyRoute = PublicPublicPrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => PublicPublicRoute,
} as any)

const PublicPublicPricingRoute = PublicPublicPricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => PublicPublicRoute,
} as any)

const ProtectedProtectedVideosRoute = ProtectedProtectedVideosImport.update({
  id: '/videos',
  path: '/videos',
  getParentRoute: () => ProtectedProtectedRoute,
} as any)

const AuthAuthVerifyRoute = AuthAuthVerifyImport.update({
  id: '/verify',
  path: '/verify',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthSurveyRoute = AuthAuthSurveyImport.update({
  id: '/survey',
  path: '/survey',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthResetRoute = AuthAuthResetImport.update({
  id: '/reset',
  path: '/reset',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthForgotRoute = AuthAuthForgotImport.update({
  id: '/forgot',
  path: '/forgot',
  getParentRoute: () => AuthAuthRoute,
} as any)

const ProtectedProtectedVideosIndexRoute =
  ProtectedProtectedVideosIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedProtectedVideosRoute,
  } as any)

const ProtectedProtectedVideosIdRoute = ProtectedProtectedVideosIdImport.update(
  {
    id: '/$id',
    path: '/$id',
    getParentRoute: () => ProtectedProtectedVideosRoute,
  } as any,
)

const ProtectedProtectedVideosIdProcessRoute =
  ProtectedProtectedVideosIdProcessImport.update({
    id: '/process',
    path: '/process',
    getParentRoute: () => ProtectedProtectedVideosIdRoute,
  } as any)

const ProtectedProtectedVideosIdEditRoute =
  ProtectedProtectedVideosIdEditImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => ProtectedProtectedVideosIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth/_auth': {
      id: '/_auth/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof rootRoute
    }
    '/_protected/_protected': {
      id: '/_protected/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_public/_public': {
      id: '/_public/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicPublicImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_auth/forgot': {
      id: '/_auth/_auth/forgot'
      path: '/forgot'
      fullPath: '/forgot'
      preLoaderRoute: typeof AuthAuthForgotImport
      parentRoute: typeof AuthAuthImport
    }
    '/_auth/_auth/login': {
      id: '/_auth/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthAuthImport
    }
    '/_auth/_auth/register': {
      id: '/_auth/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthAuthImport
    }
    '/_auth/_auth/reset': {
      id: '/_auth/_auth/reset'
      path: '/reset'
      fullPath: '/reset'
      preLoaderRoute: typeof AuthAuthResetImport
      parentRoute: typeof AuthAuthImport
    }
    '/_auth/_auth/survey': {
      id: '/_auth/_auth/survey'
      path: '/survey'
      fullPath: '/survey'
      preLoaderRoute: typeof AuthAuthSurveyImport
      parentRoute: typeof AuthAuthImport
    }
    '/_auth/_auth/verify': {
      id: '/_auth/_auth/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof AuthAuthVerifyImport
      parentRoute: typeof AuthAuthImport
    }
    '/_protected/_protected/videos': {
      id: '/_protected/_protected/videos'
      path: '/videos'
      fullPath: '/videos'
      preLoaderRoute: typeof ProtectedProtectedVideosImport
      parentRoute: typeof ProtectedProtectedImport
    }
    '/_public/_public/pricing': {
      id: '/_public/_public/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PublicPublicPricingImport
      parentRoute: typeof PublicPublicImport
    }
    '/_public/_public/privacy': {
      id: '/_public/_public/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PublicPublicPrivacyImport
      parentRoute: typeof PublicPublicImport
    }
    '/_public/_public/terms': {
      id: '/_public/_public/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof PublicPublicTermsImport
      parentRoute: typeof PublicPublicImport
    }
    '/_public/_public/': {
      id: '/_public/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicPublicIndexImport
      parentRoute: typeof PublicPublicImport
    }
    '/_protected/_protected/videos/$id': {
      id: '/_protected/_protected/videos/$id'
      path: '/$id'
      fullPath: '/videos/$id'
      preLoaderRoute: typeof ProtectedProtectedVideosIdImport
      parentRoute: typeof ProtectedProtectedVideosImport
    }
    '/_protected/_protected/videos/': {
      id: '/_protected/_protected/videos/'
      path: '/'
      fullPath: '/videos/'
      preLoaderRoute: typeof ProtectedProtectedVideosIndexImport
      parentRoute: typeof ProtectedProtectedVideosImport
    }
    '/_protected/_protected/videos/$id/edit': {
      id: '/_protected/_protected/videos/$id/edit'
      path: '/edit'
      fullPath: '/videos/$id/edit'
      preLoaderRoute: typeof ProtectedProtectedVideosIdEditImport
      parentRoute: typeof ProtectedProtectedVideosIdImport
    }
    '/_protected/_protected/videos/$id/process': {
      id: '/_protected/_protected/videos/$id/process'
      path: '/process'
      fullPath: '/videos/$id/process'
      preLoaderRoute: typeof ProtectedProtectedVideosIdProcessImport
      parentRoute: typeof ProtectedProtectedVideosIdImport
    }
  }
}

// Create and export the route tree

interface AuthAuthRouteChildren {
  AuthAuthForgotRoute: typeof AuthAuthForgotRoute
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
  AuthAuthResetRoute: typeof AuthAuthResetRoute
  AuthAuthSurveyRoute: typeof AuthAuthSurveyRoute
  AuthAuthVerifyRoute: typeof AuthAuthVerifyRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthForgotRoute: AuthAuthForgotRoute,
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
  AuthAuthResetRoute: AuthAuthResetRoute,
  AuthAuthSurveyRoute: AuthAuthSurveyRoute,
  AuthAuthVerifyRoute: AuthAuthVerifyRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface ProtectedProtectedVideosIdRouteChildren {
  ProtectedProtectedVideosIdEditRoute: typeof ProtectedProtectedVideosIdEditRoute
  ProtectedProtectedVideosIdProcessRoute: typeof ProtectedProtectedVideosIdProcessRoute
}

const ProtectedProtectedVideosIdRouteChildren: ProtectedProtectedVideosIdRouteChildren =
  {
    ProtectedProtectedVideosIdEditRoute: ProtectedProtectedVideosIdEditRoute,
    ProtectedProtectedVideosIdProcessRoute:
      ProtectedProtectedVideosIdProcessRoute,
  }

const ProtectedProtectedVideosIdRouteWithChildren =
  ProtectedProtectedVideosIdRoute._addFileChildren(
    ProtectedProtectedVideosIdRouteChildren,
  )

interface ProtectedProtectedVideosRouteChildren {
  ProtectedProtectedVideosIdRoute: typeof ProtectedProtectedVideosIdRouteWithChildren
  ProtectedProtectedVideosIndexRoute: typeof ProtectedProtectedVideosIndexRoute
}

const ProtectedProtectedVideosRouteChildren: ProtectedProtectedVideosRouteChildren =
  {
    ProtectedProtectedVideosIdRoute:
      ProtectedProtectedVideosIdRouteWithChildren,
    ProtectedProtectedVideosIndexRoute: ProtectedProtectedVideosIndexRoute,
  }

const ProtectedProtectedVideosRouteWithChildren =
  ProtectedProtectedVideosRoute._addFileChildren(
    ProtectedProtectedVideosRouteChildren,
  )

interface ProtectedProtectedRouteChildren {
  ProtectedProtectedVideosRoute: typeof ProtectedProtectedVideosRouteWithChildren
}

const ProtectedProtectedRouteChildren: ProtectedProtectedRouteChildren = {
  ProtectedProtectedVideosRoute: ProtectedProtectedVideosRouteWithChildren,
}

const ProtectedProtectedRouteWithChildren =
  ProtectedProtectedRoute._addFileChildren(ProtectedProtectedRouteChildren)

interface PublicPublicRouteChildren {
  PublicPublicPricingRoute: typeof PublicPublicPricingRoute
  PublicPublicPrivacyRoute: typeof PublicPublicPrivacyRoute
  PublicPublicTermsRoute: typeof PublicPublicTermsRoute
  PublicPublicIndexRoute: typeof PublicPublicIndexRoute
}

const PublicPublicRouteChildren: PublicPublicRouteChildren = {
  PublicPublicPricingRoute: PublicPublicPricingRoute,
  PublicPublicPrivacyRoute: PublicPublicPrivacyRoute,
  PublicPublicTermsRoute: PublicPublicTermsRoute,
  PublicPublicIndexRoute: PublicPublicIndexRoute,
}

const PublicPublicRouteWithChildren = PublicPublicRoute._addFileChildren(
  PublicPublicRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicPublicRouteWithChildren
  '/forgot': typeof AuthAuthForgotRoute
  '/login': typeof AuthAuthLoginRoute
  '/register': typeof AuthAuthRegisterRoute
  '/reset': typeof AuthAuthResetRoute
  '/survey': typeof AuthAuthSurveyRoute
  '/verify': typeof AuthAuthVerifyRoute
  '/videos': typeof ProtectedProtectedVideosRouteWithChildren
  '/pricing': typeof PublicPublicPricingRoute
  '/privacy': typeof PublicPublicPrivacyRoute
  '/terms': typeof PublicPublicTermsRoute
  '/': typeof PublicPublicIndexRoute
  '/videos/$id': typeof ProtectedProtectedVideosIdRouteWithChildren
  '/videos/': typeof ProtectedProtectedVideosIndexRoute
  '/videos/$id/edit': typeof ProtectedProtectedVideosIdEditRoute
  '/videos/$id/process': typeof ProtectedProtectedVideosIdProcessRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedProtectedRouteWithChildren
  '/forgot': typeof AuthAuthForgotRoute
  '/login': typeof AuthAuthLoginRoute
  '/register': typeof AuthAuthRegisterRoute
  '/reset': typeof AuthAuthResetRoute
  '/survey': typeof AuthAuthSurveyRoute
  '/verify': typeof AuthAuthVerifyRoute
  '/pricing': typeof PublicPublicPricingRoute
  '/privacy': typeof PublicPublicPrivacyRoute
  '/terms': typeof PublicPublicTermsRoute
  '/': typeof PublicPublicIndexRoute
  '/videos/$id': typeof ProtectedProtectedVideosIdRouteWithChildren
  '/videos': typeof ProtectedProtectedVideosIndexRoute
  '/videos/$id/edit': typeof ProtectedProtectedVideosIdEditRoute
  '/videos/$id/process': typeof ProtectedProtectedVideosIdProcessRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth/_auth': typeof AuthAuthRouteWithChildren
  '/_protected/_protected': typeof ProtectedProtectedRouteWithChildren
  '/_public/_public': typeof PublicPublicRouteWithChildren
  '/_auth/_auth/forgot': typeof AuthAuthForgotRoute
  '/_auth/_auth/login': typeof AuthAuthLoginRoute
  '/_auth/_auth/register': typeof AuthAuthRegisterRoute
  '/_auth/_auth/reset': typeof AuthAuthResetRoute
  '/_auth/_auth/survey': typeof AuthAuthSurveyRoute
  '/_auth/_auth/verify': typeof AuthAuthVerifyRoute
  '/_protected/_protected/videos': typeof ProtectedProtectedVideosRouteWithChildren
  '/_public/_public/pricing': typeof PublicPublicPricingRoute
  '/_public/_public/privacy': typeof PublicPublicPrivacyRoute
  '/_public/_public/terms': typeof PublicPublicTermsRoute
  '/_public/_public/': typeof PublicPublicIndexRoute
  '/_protected/_protected/videos/$id': typeof ProtectedProtectedVideosIdRouteWithChildren
  '/_protected/_protected/videos/': typeof ProtectedProtectedVideosIndexRoute
  '/_protected/_protected/videos/$id/edit': typeof ProtectedProtectedVideosIdEditRoute
  '/_protected/_protected/videos/$id/process': typeof ProtectedProtectedVideosIdProcessRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgot'
    | '/login'
    | '/register'
    | '/reset'
    | '/survey'
    | '/verify'
    | '/videos'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/'
    | '/videos/$id'
    | '/videos/'
    | '/videos/$id/edit'
    | '/videos/$id/process'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/forgot'
    | '/login'
    | '/register'
    | '/reset'
    | '/survey'
    | '/verify'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/'
    | '/videos/$id'
    | '/videos'
    | '/videos/$id/edit'
    | '/videos/$id/process'
  id:
    | '__root__'
    | '/_auth/_auth'
    | '/_protected/_protected'
    | '/_public/_public'
    | '/_auth/_auth/forgot'
    | '/_auth/_auth/login'
    | '/_auth/_auth/register'
    | '/_auth/_auth/reset'
    | '/_auth/_auth/survey'
    | '/_auth/_auth/verify'
    | '/_protected/_protected/videos'
    | '/_public/_public/pricing'
    | '/_public/_public/privacy'
    | '/_public/_public/terms'
    | '/_public/_public/'
    | '/_protected/_protected/videos/$id'
    | '/_protected/_protected/videos/'
    | '/_protected/_protected/videos/$id/edit'
    | '/_protected/_protected/videos/$id/process'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
  ProtectedProtectedRoute: typeof ProtectedProtectedRouteWithChildren
  PublicPublicRoute: typeof PublicPublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
  ProtectedProtectedRoute: ProtectedProtectedRouteWithChildren,
  PublicPublicRoute: PublicPublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth/_auth",
        "/_protected/_protected",
        "/_public/_public"
      ]
    },
    "/_auth/_auth": {
      "filePath": "_auth/_auth.tsx",
      "children": [
        "/_auth/_auth/forgot",
        "/_auth/_auth/login",
        "/_auth/_auth/register",
        "/_auth/_auth/reset",
        "/_auth/_auth/survey",
        "/_auth/_auth/verify"
      ]
    },
    "/_protected/_protected": {
      "filePath": "_protected/_protected.tsx",
      "children": [
        "/_protected/_protected/videos"
      ]
    },
    "/_public/_public": {
      "filePath": "_public/_public.tsx",
      "children": [
        "/_public/_public/pricing",
        "/_public/_public/privacy",
        "/_public/_public/terms",
        "/_public/_public/"
      ]
    },
    "/_auth/_auth/forgot": {
      "filePath": "_auth/_auth.forgot.tsx",
      "parent": "/_auth/_auth"
    },
    "/_auth/_auth/login": {
      "filePath": "_auth/_auth.login.tsx",
      "parent": "/_auth/_auth"
    },
    "/_auth/_auth/register": {
      "filePath": "_auth/_auth.register.tsx",
      "parent": "/_auth/_auth"
    },
    "/_auth/_auth/reset": {
      "filePath": "_auth/_auth.reset.tsx",
      "parent": "/_auth/_auth"
    },
    "/_auth/_auth/survey": {
      "filePath": "_auth/_auth.survey.tsx",
      "parent": "/_auth/_auth"
    },
    "/_auth/_auth/verify": {
      "filePath": "_auth/_auth.verify.tsx",
      "parent": "/_auth/_auth"
    },
    "/_protected/_protected/videos": {
      "filePath": "_protected/_protected.videos.tsx",
      "parent": "/_protected/_protected",
      "children": [
        "/_protected/_protected/videos/$id",
        "/_protected/_protected/videos/"
      ]
    },
    "/_public/_public/pricing": {
      "filePath": "_public/_public.pricing.tsx",
      "parent": "/_public/_public"
    },
    "/_public/_public/privacy": {
      "filePath": "_public/_public.privacy.tsx",
      "parent": "/_public/_public"
    },
    "/_public/_public/terms": {
      "filePath": "_public/_public.terms.tsx",
      "parent": "/_public/_public"
    },
    "/_public/_public/": {
      "filePath": "_public/_public.index.tsx",
      "parent": "/_public/_public"
    },
    "/_protected/_protected/videos/$id": {
      "filePath": "_protected/_protected.videos.$id.tsx",
      "parent": "/_protected/_protected/videos",
      "children": [
        "/_protected/_protected/videos/$id/edit",
        "/_protected/_protected/videos/$id/process"
      ]
    },
    "/_protected/_protected/videos/": {
      "filePath": "_protected/_protected.videos.index.tsx",
      "parent": "/_protected/_protected/videos"
    },
    "/_protected/_protected/videos/$id/edit": {
      "filePath": "_protected/_protected.videos.$id.edit.tsx",
      "parent": "/_protected/_protected/videos/$id"
    },
    "/_protected/_protected/videos/$id/process": {
      "filePath": "_protected/_protected.videos.$id.process.tsx",
      "parent": "/_protected/_protected/videos/$id"
    }
  }
}
ROUTE_MANIFEST_END */
